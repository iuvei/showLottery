<?php
 namespace Admin\Model; use Think\Model; class ModelModel extends Model{ protected $_validate = array( array('name', 'require', '标识不能为空', self::MUST_VALIDATE , 'regex', self::MODEL_INSERT), array('name', '/^[a-zA-Z]\w{0,39}$/', '文档标识不合法', self::VALUE_VALIDATE, 'regex', self::MODEL_BOTH), array('name', '', '标识已经存在', self::VALUE_VALIDATE, 'unique', self::MODEL_BOTH), array('title', 'require', '标题不能为空', self::MUST_VALIDATE, 'regex', self::MODEL_BOTH), array('title', '1,30', '标题长度不能超过30个字符', self::MUST_VALIDATE, 'length', self::MODEL_BOTH), array('list_grid', 'require', '列表定义不能为空', self::MUST_VALIDATE , 'regex', self::MODEL_UPDATE), ); protected $_auto = array( array('name', 'strtolower', self::MODEL_INSERT, 'function'), array('create_time', NOW_TIME, self::MODEL_INSERT), array('update_time', NOW_TIME, self::MODEL_BOTH), array('status', '1', self::MODEL_INSERT, 'string'), array('field_sort', 'getFields', self::MODEL_BOTH, 'callback'), ); public function update(){ $data = $this->create(); if(empty($data)){ return false; } if(empty($data['id'])){ $id = $this->add(); if(!$id){ $this->error = '新增模型出错！'; return false; } } else { $status = $this->save(); if(false === $status){ $this->error = '更新模型出错！'; return false; } } S('DOCUMENT_MODEL_LIST', null); action_log('update_model','model',$data['id'] ? $data['id'] : $id,UID); return $data; } protected function getFields($fields){ return empty($fields) ? '' : json_encode($fields); } public function getTables($connection = null){ $tables = M()->query('SHOW TABLES;'); foreach ($tables as $key=>$value){ $tables[$key] = $value['Tables_in_'.C('DB_NAME')]; } return $tables; } public function generate($table){ $name = substr($table, strlen(C('DB_PREFIX'))); $data = array('name'=>$name, 'title'=>$name); $data = $this->create($data); $res = $this->add($data); if(!$res){ return false; } $fields = M()->query('SHOW FULL COLUMNS FROM '.$table); foreach ($fields as $key=>$value){ if(strcmp($value['Field'], 'id') == 0){ continue; } $data = array(); $data['name'] = $value['Field']; $data['title'] = $value['Comment']; $data['type'] = 'string'; $is_null = strcmp($value['Null'], 'NO') == 0 ? ' NOT NULL ' : ' NULL '; $data['field'] = $value['Type'].$is_null; $data['value'] = $value['Default'] == null ? '' : $value['Default']; $data['model_id'] = $res; $_POST = $data; D('Attribute')->update($data, false); } return $res; } public function del($id){ $model = $this->field('name')->find($id); $table_name = C('DB_PREFIX').strtolower($model['name']); M('Attribute')->where(array('model_id'=>$id))->delete(); $this->delete($id); $sql = <<<sql
				DROP TABLE {$table_name};
sql;
$res = M()->execute($sql); return $res !== false; } } 