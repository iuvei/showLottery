<?php
 function get_list_field($data, $grid,$model){ foreach($grid['field'] as $field){ $array = explode('|',$field); $temp = $data[$array[0]]; if(isset($array[1])){ $temp = call_user_func($array[1], $temp); } $data2[$array[0]] = $temp; } if(!empty($grid['format'])){ $value = preg_replace_callback('/\[([a-z_]+)\]/', function($match) use($data2){return $data2[$match[1]];}, $grid['format']); }else{ $value = implode(' ',$data2); } if(!empty($grid['href'])){ $links = explode(',',$grid['href']); foreach($links as $link){ $array = explode('|',$link); $href = $array[0]; if(preg_match('/^\[([a-z_]+)\]$/',$href,$matches)){ $val[] = $data2[$matches[1]]; }else{ $show = isset($array[1])?$array[1]:$value; $href = str_replace( array('[DELETE]','[EDIT]','[MODEL]'), array('del?ids=[id]&model=[MODEL]','edit?id=[id]&model=[MODEL]',$model['id']), $href); $href = preg_replace_callback('/\[([a-z_]+)\]/', function($match) use($data){return $data[$match[1]];}, $href); $val[] = '<a href="'.U($href).'">'.$show.'</a>'; } } $value = implode(' ',$val); } return $value; } function get_model_by_id($id){ return $model = M('Model')->getFieldById($id,'title'); } function get_attribute_type($type=''){ static $_type = array( 'num' => array('数字','int(10) UNSIGNED NOT NULL'), 'string' => array('字符串','varchar(255) NOT NULL'), 'textarea' => array('文本框','text NOT NULL'), 'datetime' => array('时间','int(10) NOT NULL'), 'bool' => array('布尔','tinyint(2) NOT NULL'), 'select' => array('枚举','char(50) NOT NULL'), 'radio' => array('单选','char(10) NOT NULL'), 'checkbox' => array('多选','varchar(100) NOT NULL'), 'editor' => array('编辑器','text NOT NULL'), 'picture' => array('上传图片','int(10) UNSIGNED NOT NULL'), 'file' => array('上传附件','int(10) UNSIGNED NOT NULL'), ); return $type?$_type[$type][0]:$_type; } function get_status_title($status = null){ if(!isset($status)){ return false; } switch ($status){ case -1 : return '已删除'; break; case 0 : return '禁用'; break; case 1 : return '正常'; break; case 2 : return '待审核'; break; default : return false; break; } } function show_status_op($status) { switch ($status){ case 0 : return '启用'; break; case 1 : return '禁用'; break; case 2 : return '审核'; break; default : return false; break; } } function show_status_op2($status) { switch ($status){ case -1 : return '已删除'; break; case 0 : return '启用'; break; case 1 : return '待处理'; break; case 2 : return '已处理'; break; default : return false; break; } } function show_feedback_type($type) { switch ($type){ case 1 : return '其它相关问题'; break; case 2 : return '网站优化建议'; break; case 3 : return '商务合作'; break; default : return false; break; } } function get_document_type($type = null){ if(!isset($type)){ return false; } switch ($type){ case 1 : return '目录'; break; case 2 : return '主题'; break; case 3 : return '段落'; break; default : return false; break; } } function get_config_type($type=0){ $list = C('CONFIG_TYPE_LIST'); return $list[$type]; } function fopen_url($url,$postParam="") { $file_content = ''; if (function_exists('curl_init')) { $curl_handle = curl_init(); curl_setopt($curl_handle, CURLOPT_URL, $url); curl_setopt($curl_handle, CURLOPT_CONNECTTIMEOUT,2); curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER,1); curl_setopt($curl_handle, CURLOPT_FAILONERROR,1); curl_setopt($curl_handle, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0'); if($postParam != "") { curl_setopt($curl_handle, CURLOPT_POST, 1); curl_setopt($curl_handle, CURLOPT_POSTFIELDS, $postParam); } $file_content = curl_exec($curl_handle); if($file_content === false) $file_content = ''; curl_close($curl_handle); } elseif (function_exists('file_get_contents')) { ini_set('user_agent','Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0'); $file_content = @file_get_contents($url); } elseif (ini_get('allow_url_fopen') && ($file = @fopen($url, 'rb'))){ $i = 0; while (!feof($file) && $i++ < 1000) { $file_content .= strtolower(fread($file, 4096)); } fclose($file); } else { $file_content = ''; } return $file_content; } function get_config_group($group=0){ $list = C('CONFIG_GROUP_LIST'); return $group?$list[$group]:''; } function int_to_string(&$data,$map=array('status'=>array(1=>'正常',-1=>'删除',0=>'禁用',2=>'未审核',3=>'草稿'))) { if($data === false || $data === null ){ return $data; } $data = (array)$data; foreach ($data as $key => $row){ foreach ($map as $col=>$pair){ if(isset($row[$col]) && isset($pair[$row[$col]])){ $data[$key][$col.'_text'] = $pair[$row[$col]]; } } } return $data; } function extra_menu($extra_menu,&$base_menu){ foreach ($extra_menu as $key=>$group){ if( isset($base_menu['child'][$key]) ){ $base_menu['child'][$key] = array_merge( $base_menu['child'][$key], $group); }else{ $base_menu['child'][$key] = $group; } } } function get_parent_category($cid){ if(empty($cid)){ return false; } $cates = M('Category')->where(array('status'=>1))->field('id,title,pid')->order('sort')->select(); $child = get_category($cid); $pid = $child['pid']; $temp = array(); $res[] = $child; while(true){ foreach ($cates as $key=>$cate){ if($cate['id'] == $pid){ $pid = $cate['pid']; array_unshift($res, $cate); } } if($pid == 0){ break; } } return $res; } function check_verify($code, $id = 1){ $verify = new \Think\Verify(); return $verify->check($code, $id); } function get_type_bycate($id = null){ if(empty($id)){ return false; } $type_list = C('DOCUMENT_MODEL_TYPE'); $model_type = M('Category')->getFieldById($id, 'type'); $model_type = explode(',', $model_type); foreach ($type_list as $key=>$value){ if(!in_array($key, $model_type)){ unset($type_list[$key]); } } return $type_list; } function get_cate($cate_id = null){ if(empty($cate_id)){ return false; } $cate = M('Category')->where('id='.$cate_id)->getField('title'); return $cate; } function parse_config_attr($string) { $array = preg_split('/[,;\r\n]+/', trim($string, ",;\r\n")); if(strpos($string,':')){ $value = array(); foreach ($array as $val) { list($k, $v) = explode(':', $val); $value[$k] = $v; } }else{ $value = $array; } return $value; } function get_subdocument_count($id=0){ return M('Document')->where('pid='.$id)->count(); } function parse_field_attr($string) { if(0 === strpos($string,':')){ return eval(substr($string,1).';'); } $array = preg_split('/[,;\r\n]+/', trim($string, ",;\r\n")); if(strpos($string,':')){ $value = array(); foreach ($array as $val) { list($k, $v) = explode(':', $val); $value[$k] = $v; } }else{ $value = $array; } return $value; } function get_action($id = null, $field = null){ if(empty($id) && !is_numeric($id)){ return false; } $list = S('action_list'); if(empty($list[$id])){ $map = array('status'=>array('gt', -1), 'id'=>$id); $list[$id] = M('Action')->where($map)->field(true)->find(); } return empty($field) ? $list[$id] : $list[$id][$field]; } function get_document_field($value = null, $condition = 'id', $field = null){ if(empty($value)){ return false; } $map[$condition] = $value; $info = M('Model')->where($map); if(empty($field)){ $info = $info->field(true)->find(); }else{ $info = $info->getField($field); } return $info; } function get_action_type($type, $all = false){ $list = array( 1=>'系统', 2=>'用户', ); if($all){ return $list; } return $list[$type]; } 