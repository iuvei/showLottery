<?php
 namespace Admin\Controller; class ThinkController extends AdminController { public function lists($model = null, $p = 0){ $model || $this->error('模型名标识必须！'); $page = intval($p); $page = $page ? $page : 1; $model = M('Model')->getByName($model); $model || $this->error('模型不存在！'); $fields = array(); $grids = preg_split('/[;\r\n]+/s', $model['list_grid']); foreach ($grids as &$value) { $val = explode(':', $value); $field = explode(',', $val[0]); $value = array('field' => $field, 'title' => $val[1]); if(isset($val[2])){ $value['href'] = $val[2]; preg_replace_callback('/\[([a-z_]+)\]/', function($match) use(&$fields){$fields[]=$match[1];}, $value['href']); } if(strpos($val[1],'|')){ list($value['title'],$value['format']) = explode('|',$val[1]); } foreach($field as $val){ $array = explode('|',$val); $fields[] = $array[0]; } } $fields = array_unique($fields); $map = array(); $key = $model['search_key']?$model['search_key']:'title'; if(isset($_REQUEST[$key])){ $map[$key] = array('like','%'.$_GET[$key].'%'); unset($_REQUEST[$key]); } foreach($_REQUEST as $name=>$val){ if(in_array($name,$fields)){ $map[$name] = $val; } } $row = empty($model['list_row']) ? 10 : $model['list_row']; if($model['extend']){ $name = get_table_name($model['id']); $parent = get_table_name($model['extend']); $fix = C("DB_PREFIX"); $key = array_search('id', $fields); if(false === $key){ array_push($fields, "{$fix}{$parent}.id as id"); } else { $fields[$key] = "{$fix}{$parent}.id as id"; } $count = M($parent)->join("INNER JOIN {$fix}{$name} ON {$fix}{$parent}.id = {$fix}{$name}.id")->where($map)->count(); $data = M($parent) ->join("INNER JOIN {$fix}{$name} ON {$fix}{$parent}.id = {$fix}{$name}.id") ->field(empty($fields) ? true : $fields) ->where($map) ->order("{$fix}{$parent}.id DESC") ->page($page, $row) ->select(); } else { in_array('id', $fields) || array_push($fields, 'id'); $name = parse_name(get_table_name($model['id']), true); $data = M($name) ->field(empty($fields) ? true : $fields) ->where($map) ->order('id DESC') ->page($page, $row) ->select(); $count = M($name)->where($map)->count(); } if($count > $row){ $page = new \Think\Page($count, $row); $page->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%'); $this->assign('_page', $page->show()); } $this->assign('model', $model); $this->assign('list_grids', $grids); $this->assign('list_data', $data); $this->meta_title = $model['title'].'列表'; $this->display($model['template_list']); } public function del($model = null, $ids=null){ $model = M('Model')->find($model); $model || $this->error('模型不存在！'); $ids = array_unique((array)I('ids',0)); if ( empty($ids) ) { $this->error('请选择要操作的数据!'); } $Model = M(get_table_name($model['id'])); $map = array('id' => array('in', $ids) ); if($Model->where($map)->delete()){ $this->success('删除成功'); } else { $this->error('删除失败！'); } } public function edit($model = null, $id = 0){ $model = M('Model')->find($model); $model || $this->error('模型不存在！'); if(IS_POST){ $Model = D(parse_name(get_table_name($model['id']),1)); $Model = $this->checkAttr($Model,$model['id']); if($Model->create() && $Model->save()){ $this->success('保存'.$model['title'].'成功！', U('lists?model='.$model['name'])); } else { $this->error($Model->getError()); } } else { $fields = get_model_attribute($model['id']); $data = M(get_table_name($model['id']))->find($id); $data || $this->error('数据不存在！'); $this->assign('model', $model); $this->assign('fields', $fields); $this->assign('data', $data); $this->meta_title = '编辑'.$model['title']; $this->display($model['template_edit']?$model['template_edit']:''); } } public function add($model = null){ $model = M('Model')->where(array('status' => 1))->find($model); $model || $this->error('模型不存在！'); if(IS_POST){ $Model = D(parse_name(get_table_name($model['id']),1)); $Model = $this->checkAttr($Model,$model['id']); if($Model->create() && $Model->add()){ $this->success('添加'.$model['title'].'成功！', U('lists?model='.$model['name'])); } else { $this->error($Model->getError()); } } else { $fields = get_model_attribute($model['id']); $this->assign('model', $model); $this->assign('fields', $fields); $this->meta_title = '新增'.$model['title']; $this->display($model['template_add']?$model['template_add']:''); } } protected function checkAttr($Model,$model_id){ $fields = get_model_attribute($model_id,false); $validate = $auto = array(); foreach($fields as $key=>$attr){ if($attr['is_must']){ $validate[] = array($attr['name'],'require',$attr['title'].'必须!'); } if(!empty($attr['validate_rule'])) { $validate[] = array($attr['name'],$attr['validate_rule'],$attr['error_info']?$attr['error_info']:$attr['title'].'验证错误',0,$attr['validate_type'],$attr['validate_time']); } if(!empty($attr['auto_rule'])) { $auto[] = array($attr['name'],$attr['auto_rule'],$attr['auto_time'],$attr['auto_type']); }elseif('checkbox'==$attr['type']){ $auto[] = array($attr['name'],'arr2str',3,'function'); }elseif('datetime' == $attr['type']){ $auto[] = array($attr['name'],'strtotime',3,'function'); } } return $Model->validate($validate)->auto($auto); } }