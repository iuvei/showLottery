<?php
 namespace Admin\Controller; use Admin\Model\AuthGroupModel; class ModelController extends AdminController { protected function checkDynamic(){ if(IS_ROOT){ return true; } $model_ids = AuthGroupModel::getAuthModels(UID); $id = I('id'); switch(strtolower(ACTION_NAME)){ case 'edit': case 'update': if ( in_array($id,$model_ids) ) { return true; }else{ return false; } case 'setstatus': if ( is_array($id) && array_intersect($id,(array)$model_ids)==$id ) { return true; }elseif( in_array($id,$model_ids) ){ return true; }else{ return false; } } return null; } public function index(){ $map = array('status'=>array('gt',-1)); $list = $this->lists('Model',$map); int_to_string($list); Cookie('__forward__',$_SERVER['REQUEST_URI']); $this->assign('_list', $list); $this->meta_title = '模型管理'; $this->display(); } public function add(){ $models = M('Model')->where(array('extend'=>0))->field('id,title')->select(); $this->assign('models', $models); $this->meta_title = '新增模型'; $this->display(); } public function edit(){ $id = I('get.id',''); if(empty($id)){ $this->error('参数不能为空！'); } $Model = M('Model'); $data = $Model->field(true)->find($id); if(!$data){ $this->error($Model->getError()); } $fields = M('Attribute')->where(array('model_id'=>$data['id']))->field('id,name,title,is_show')->select(); if($data['extend'] != 0){ $extend_fields = M('Attribute')->where(array('model_id'=>$data['extend']))->field('id,name,title,is_show')->select(); $fields = array_merge($fields, $extend_fields); } $field_sort = json_decode($data['field_sort'], true); if(!empty($field_sort)){ $fields_f = array(); foreach($fields as $v){ $fields_f[$v['id']] = $v; } $fields = array(); foreach($field_sort as $key => $groups){ foreach($groups as $group){ $fields[$fields_f[$group]['id']] = array( 'id' => $fields_f[$group]['id'], 'name' => $fields_f[$group]['name'], 'title' => $fields_f[$group]['title'], 'is_show' => $fields_f[$group]['is_show'], 'group' => $key ); } } $new_fields = array_diff_key($fields_f,$fields); foreach ($new_fields as $value){ if($value['is_show'] == 1){ array_unshift($fields, $value); } } } $this->assign('fields', $fields); $this->assign('info', $data); $this->meta_title = '编辑模型'; $this->display(); } public function del(){ $ids = I('get.ids'); empty($ids) && $this->error('参数不能为空！'); $ids = explode(',', $ids); foreach ($ids as $value){ $res = D('Model')->del($value); if(!$res){ break; } } if(!$res){ $this->error(D('Model')->getError()); }else{ $this->success('删除模型成功！'); } } public function update(){ $res = D('Model')->update(); if(!$res){ $this->error(D('Model')->getError()); }else{ $this->success($res['id']?'更新成功':'新增成功', Cookie('__forward__')); } } public function generate(){ if(!IS_POST){ $tables = D('Model')->getTables(); $this->assign('tables', $tables); $this->meta_title = '生成模型'; $this->display(); }else{ $table = I('post.table'); empty($table) && $this->error('请选择要生成的数据表！'); $res = D('Model')->generate($table); if($res){ $this->success('生成模型成功！', U('index')); }else{ $this->error(D('Model')->getError()); } } } } 